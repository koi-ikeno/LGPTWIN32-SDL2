#ifndef _SDL_EVENT_MANAGER_
#define _SDL_EVENT_MANAGER_

#include "Foundation/T_Singleton.h"
#include "UIFramework/SimpleBaseClasses/EventManager.h"
#include "Services/Controllers/ButtonControllerSource.h"
#include "Services/Controllers/JoystickControllerSource.h"
#include "Services/Controllers/HatControllerSource.h"
#include "Services/Controllers/KeyboardControllerSource.h"
#include <SDL/SDL.h>


#include <string>

#define MAX_JOY_COUNT 4


#include <map>




class SDLEventManager: public T_Singleton<SDLEventManager>,public EventManager {
public:
	SDLEventManager() ;
	~SDLEventManager() ;
	virtual bool Init() ;
	virtual int MainLoop() ;
	virtual void PostQuitMessage() ;
	virtual int GetKeyCode(const char *name) ;


private:
	static bool finished_ ;
	static bool dumpEvent_ ;
	//const char *keyname_[SDLK_LAST] ;

	SDL_Joystick *joystick_[MAX_JOY_COUNT];
	ButtonControllerSource *buttonCS_[MAX_JOY_COUNT] ;
	JoystickControllerSource *joystickCS_[MAX_JOY_COUNT] ;
	HatControllerSource *hatCS_[MAX_JOY_COUNT] ;
	KeyboardControllerSource *keyboardCS_ ;


	std::map<int, const Sint32> SDL2KEYCODEMAP{
	{0	,0}, //	SDLK_UNKNOWN
	{1	,'\r'}, //	SDLK_RETURN
	{2	,'\x1B'}, //	SDLK_ESCAPE
	{3	,'\b'}, //	SDLK_BACKSPACE
	{4	,'\t'}, //	SDLK_TAB
	{5	,' '}, //	SDLK_SPACE
	{6	,'!'}, //	SDLK_EXCLAIM
	{7	,'"'}, //	SDLK_QUOTEDBL
	{8	,'#'}, //	SDLK_HASH
	{9	,'%'}, //	SDLK_PERCENT
	{10	,'$'}, //	SDLK_DOLLAR
	{11	,'&'}, //	SDLK_AMPERSAND
	{12	,'\''}, //	SDLK_QUOTE
	{13	,'('}, //	SDLK_LEFTPAREN
	{14	,')'}, //	SDLK_RIGHTPAREN
	{15	,'*'}, //	SDLK_ASTERISK
	{16	,'+'}, //	SDLK_PLUS
	{17	,','}, //	SDLK_COMMA
	{18	,'-'}, //	SDLK_MINUS
	{19	,'.'}, //	SDLK_PERIOD
	{20	,'/'}, //	SDLK_SLASH
	{21	,'0'}, //	SDLK_0
	{22	,'1'}, //	SDLK_1
	{23	,'2'}, //	SDLK_2
	{24	,'3'}, //	SDLK_3
	{25	,'4'}, //	SDLK_4
	{26	,'5'}, //	SDLK_5
	{27	,'6'}, //	SDLK_6
	{28	,'7'}, //	SDLK_7
	{29	,'8'}, //	SDLK_8
	{30	,'9'}, //	SDLK_9
	{31	,':'}, //	SDLK_COLON
	{32	,';'}, //	SDLK_SEMICOLON
	{33	,'<'}, //	SDLK_LESS
	{34	,'='}, //	SDLK_EQUALS
	{35	,'>'}, //	SDLK_GREATER
	{36	,'?'}, //	SDLK_QUESTION
	{37	,'@'}, //	SDLK_AT
	{38	,'['}, //	SDLK_LEFTBRACKET
	{39	,'\\'}, //	SDLK_BACKSLASH
	{40	,']'}, //	SDLK_RIGHTBRACKET
	{41	,'^'}, //	SDLK_CARET
	{42	,'_'}, //	SDLK_UNDERSCORE
	{43	,'`'}, //	SDLK_BACKQUOTE
	{44	,'a'}, //	SDLK_a
	{45	,'b'}, //	SDLK_b
	{46	,'c'}, //	SDLK_c
	{47	,'d'}, //	SDLK_d
	{48	,'e'}, //	SDLK_e
	{49	,'f'}, //	SDLK_f
	{50	,'g'}, //	SDLK_g
	{51	,'h'}, //	SDLK_h
	{52	,'i'}, //	SDLK_i
	{53	,'j'}, //	SDLK_j
	{54	,'k'}, //	SDLK_k
	{55	,'l'}, //	SDLK_l
	{56	,'m'}, //	SDLK_m
	{57	,'n'}, //	SDLK_n
	{58	,'o'}, //	SDLK_o
	{59	,'p'}, //	SDLK_p
	{60	,'q'}, //	SDLK_q
	{61	,'r'}, //	SDLK_r
	{62	,'s'}, //	SDLK_s
	{63	,'t'}, //	SDLK_t
	{64	,'u'}, //	SDLK_u
	{65	,'v'}, //	SDLK_v
	{66	,'w'}, //	SDLK_w
	{67	,'x'}, //	SDLK_x
	{68	,'y'}, //	SDLK_y
	{69	,'z'}, //	SDLK_z
	{70	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK)}, //	SDLK_CAPSLOCK
	{71	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1)}, //	SDLK_F1
	{72	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2)}, //	SDLK_F2
	{73	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3)}, //	SDLK_F3
	{74	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4)}, //	SDLK_F4
	{75	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5)}, //	SDLK_F5
	{76	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6)}, //	SDLK_F6
	{77	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7)}, //	SDLK_F7
	{78	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8)}, //	SDLK_F8
	{79	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9)}, //	SDLK_F9
	{80	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10)}, //	SDLK_F10
	{81	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11)}, //	SDLK_F11
	{82	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12)}, //	SDLK_F12
	{83	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN)}, //	SDLK_PRINTSCREEN
	{84	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK)}, //	SDLK_SCROLLLOCK
	{85	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE)}, //	SDLK_PAUSE
	{86	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT)}, //	SDLK_INSERT
	{87	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME)}, //	SDLK_HOME
	{88	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP)}, //	SDLK_PAGEUP
	{89	,'\x7F'}, //	SDLK_DELETE
	{90	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END)}, //	SDLK_END
	{91	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN)}, //	SDLK_PAGEDOWN
	{92	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT)}, //	SDLK_RIGHT
	{93	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT)}, //	SDLK_LEFT
	{94	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN)}, //	SDLK_DOWN
	{95	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP)}, //	SDLK_UP
	{96	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR)}, //	SDLK_NUMLOCKCLEAR
	{97	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE)}, //	SDLK_KP_DIVIDE
	{98	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY)}, //	SDLK_KP_MULTIPLY
	{99	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS)}, //	SDLK_KP_MINUS
	{100	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS)}, //	SDLK_KP_PLUS
	{101	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER)}, //	SDLK_KP_ENTER
	{102	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1)}, //	SDLK_KP_1
	{103	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2)}, //	SDLK_KP_2
	{104	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3)}, //	SDLK_KP_3
	{105	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4)}, //	SDLK_KP_4
	{106	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5)}, //	SDLK_KP_5
	{107	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6)}, //	SDLK_KP_6
	{108	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7)}, //	SDLK_KP_7
	{109	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8)}, //	SDLK_KP_8
	{110	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9)}, //	SDLK_KP_9
	{111	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0)}, //	SDLK_KP_0
	{112	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD)}, //	SDLK_KP_PERIOD
	{113	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION)}, //	SDLK_APPLICATION
	{114	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER)}, //	SDLK_POWER
	{115	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS)}, //	SDLK_KP_EQUALS
	{116	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13)}, //	SDLK_F13
	{117	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14)}, //	SDLK_F14
	{118	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15)}, //	SDLK_F15
	{119	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16)}, //	SDLK_F16
	{120	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17)}, //	SDLK_F17
	{121	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18)}, //	SDLK_F18
	{122	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19)}, //	SDLK_F19
	{123	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20)}, //	SDLK_F20
	{124	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21)}, //	SDLK_F21
	{125	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22)}, //	SDLK_F22
	{126	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23)}, //	SDLK_F23
	{127	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24)}, //	SDLK_F24
	{128	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE)}, //	SDLK_EXECUTE
	{129	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP)}, //	SDLK_HELP
	{130	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU)}, //	SDLK_MENU
	{131	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT)}, //	SDLK_SELECT
	{132	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP)}, //	SDLK_STOP
	{133	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN)}, //	SDLK_AGAIN
	{134	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO)}, //	SDLK_UNDO
	{135	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT)}, //	SDLK_CUT
	{136	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY)}, //	SDLK_COPY
	{137	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE)}, //	SDLK_PASTE
	{138	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND)}, //	SDLK_FIND
	{139	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE)}, //	SDLK_MUTE
	{140	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP)}, //	SDLK_VOLUMEUP
	{141	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN)}, //	SDLK_VOLUMEDOWN
	{142	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA)}, //	SDLK_KP_COMMA
	{143	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400)}, //	SDLK_KP_EQUALSAS400
	{144	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE)}, //	SDLK_ALTERASE
	{145	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ)}, //	SDLK_SYSREQ
	{146	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL)}, //	SDLK_CANCEL
	{147	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR)}, //	SDLK_CLEAR
	{148	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR)}, //	SDLK_PRIOR
	{149	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2)}, //	SDLK_RETURN2
	{150	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR)}, //	SDLK_SEPARATOR
	{151	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT)}, //	SDLK_OUT
	{152	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER)}, //	SDLK_OPER
	{153	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN)}, //	SDLK_CLEARAGAIN
	{154	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL)}, //	SDLK_CRSEL
	{155	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL)}, //	SDLK_EXSEL
	{156	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00)}, //	SDLK_KP_00
	{157	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000)}, //	SDLK_KP_000
	{158	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR)}, //	SDLK_THOUSANDSSEPARATOR
	{159	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR)}, //	SDLK_DECIMALSEPARATOR
	{160	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT)}, //	SDLK_CURRENCYUNIT
	{161	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT)}, //	SDLK_CURRENCYSUBUNIT
	{162	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN)}, //	SDLK_KP_LEFTPAREN
	{163	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN)}, //	SDLK_KP_RIGHTPAREN
	{164	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE)}, //	SDLK_KP_LEFTBRACE
	{165	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE)}, //	SDLK_KP_RIGHTBRACE
	{166	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB)}, //	SDLK_KP_TAB
	{167	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE)}, //	SDLK_KP_BACKSPACE
	{168	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A)}, //	SDLK_KP_A
	{169	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B)}, //	SDLK_KP_B
	{170	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C)}, //	SDLK_KP_C
	{171	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D)}, //	SDLK_KP_D
	{172	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E)}, //	SDLK_KP_E
	{173	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F)}, //	SDLK_KP_F
	{174	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR)}, //	SDLK_KP_XOR
	{175	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER)}, //	SDLK_KP_POWER
	{176	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT)}, //	SDLK_KP_PERCENT
	{177	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS)}, //	SDLK_KP_LESS
	{178	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER)}, //	SDLK_KP_GREATER
	{179	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND)}, //	SDLK_KP_AMPERSAND
	{180	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND)}, //	SDLK_KP_DBLAMPERSAND
	{181	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR)}, //	SDLK_KP_VERTICALBAR
	{182	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR)}, //	SDLK_KP_DBLVERTICALBAR
	{183	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON)}, //	SDLK_KP_COLON
	{184	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH)}, //	SDLK_KP_HASH
	{185	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE)}, //	SDLK_KP_SPACE
	{186	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT)}, //	SDLK_KP_AT
	{187	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM)}, //	SDLK_KP_EXCLAM
	{188	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE)}, //	SDLK_KP_MEMSTORE
	{189	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL)}, //	SDLK_KP_MEMRECALL
	{190	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR)}, //	SDLK_KP_MEMCLEAR
	{191	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD)}, //	SDLK_KP_MEMADD
	{192	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT)}, //	SDLK_KP_MEMSUBTRACT
	{193	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY)}, //	SDLK_KP_MEMMULTIPLY
	{194	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE)}, //	SDLK_KP_MEMDIVIDE
	{195	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS)}, //	SDLK_KP_PLUSMINUS
	{196	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR)}, //	SDLK_KP_CLEAR
	{197	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY)}, //	SDLK_KP_CLEARENTRY
	{198	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY)}, //	SDLK_KP_BINARY
	{199	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL)}, //	SDLK_KP_OCTAL
	{200	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL)}, //	SDLK_KP_DECIMAL
	{201	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL)}, //	SDLK_KP_HEXADECIMAL
	{202	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL)}, //	SDLK_LCTRL
	{203	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT)}, //	SDLK_LSHIFT
	{204	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT)}, //	SDLK_LALT
	{205	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI)}, //	SDLK_LGUI
	{206	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL)}, //	SDLK_RCTRL
	{207	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT)}, //	SDLK_RSHIFT
	{208	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT)}, //	SDLK_RALT
	{209	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI)}, //	SDLK_RGUI
	{210	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE)}, //	SDLK_MODE
	{211	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT)}, //	SDLK_AUDIONEXT
	{212	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV)}, //	SDLK_AUDIOPREV
	{213	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP)}, //	SDLK_AUDIOSTOP
	{214	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY)}, //	SDLK_AUDIOPLAY
	{215	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE)}, //	SDLK_AUDIOMUTE
	{216	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT)}, //	SDLK_MEDIASELECT
	{217	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW)}, //	SDLK_WWW
	{218	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL)}, //	SDLK_MAIL
	{219	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR)}, //	SDLK_CALCULATOR
	{220	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER)}, //	SDLK_COMPUTER
	{221	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH)}, //	SDLK_AC_SEARCH
	{222	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME)}, //	SDLK_AC_HOME
	{223	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK)}, //	SDLK_AC_BACK
	{224	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD)}, //	SDLK_AC_FORWARD
	{225	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP)}, //	SDLK_AC_STOP
	{226	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH)}, //	SDLK_AC_REFRESH
	{227	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS)}, //	SDLK_AC_BOOKMARKS
	{228	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSDOWN)}, //	SDLK_BRIGHTNESSDOWN
	{229	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP)}, //	SDLK_BRIGHTNESSUP
	{230	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH)}, //	SDLK_DISPLAYSWITCH
	{231	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMTOGGLE)}, //	SDLK_KBDILLUMTOGGLE
	{232	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN)}, //	SDLK_KBDILLUMDOWN
	{233	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP)}, //	SDLK_KBDILLUMUP
	{234	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT)}, //	SDLK_EJECT
	{235	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP)}, //	SDLK_SLEEP
	{236	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP1)}, //	SDLK_APP1
	{237	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP2)}, //	SDLK_APP2
	{238	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOREWIND)}, //	SDLK_AUDIOREWIND
	{239	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOFASTFORWARD)}, //	SDLK_AUDIOFASTFORWARD
	{240	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTLEFT)}, //	SDLK_SOFTLEFT
	{241	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTRIGHT)}, //	SDLK_SOFTRIGHT
	{242	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALL)}, //	SDLK_CALL
	{243	,SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ENDCALL)} //	SDLK_ENDCALL
	};


} ;
#endif
